#!/usr/bin/env node
// Usage: ./garcmd [relayChain]

var GlobalAssetRegistry = require("./globalassetregistry");
const endpoints = require("./endpoints");

async function main() {
    var targetedRelaychain = 'polkadot'
    process.argv.forEach(function(val, index, array) {
        if (index == 2 && val.length > 0) {
            targetedRelaychain = val;
        }
    });

    var gar = new GlobalAssetRegistry();
    await gar.initPublicEndpointsMap(targetedRelaychain)
    let supportedChains = gar.getSupportedChains()
    let supportedChainKeys = Object.keys(supportedChains)
    let supportedChainHelper = gar.printChainhelper()
    console.log(`[${targetedRelaychain}] SupportedChains`, supportedChainHelper)

    let failedChainkeys = await gar.batchApiInit(supportedChainKeys)
    console.log(`failedChainkeys`, failedChainkeys)
    for (chainkey of supportedChainKeys){
        let api = await gar.getAPI(chainkey)
        if (api){
            await gar.setupRegistryParser(api, chainkey)
        }
    }
    console.log(`AssetMap`, gar.getchainAssetMap())

    console.log(`XcmAssetMap`, gar.getXcmAssetMap())
}

main()
    .then(() => {
        console.log("finishing...")
        process.exit(0);
    })
    .catch((e) => {
        console.error('ERROR', e);
        process.exit(1);
    });
