<%- include('header', {chainInfo: chainInfo, title: `${chain.chainName} Block` }); %>
<%
  let prevBlockUrl = `/block/${id}/${blockNumber - 1}`;
  let nextBlockUrl = `/block/${id}/${blockNumber + 1}`;
%>
<%- include('chainheader', { chain: chain, title: `Block ${blockNumber}` }); %>


<!-- Nav tabs -->
<ul class="nav nav-tabs" id="blockTab" role="tablist">
  <%
let tabs = [
{ title: "Overview", target: "overview" },
{ title: "Extrinsics", target: "extrinsics" },
{ title: "Events", target: "events" }
]

for (let i=0; i<tabs.length; i++) {
  let t = tabs[i];
  let title = t.title;
  let target = t.target;
  let id = target + "-tab";
  let href = "#" + target;
%>
  <li class="nav-item" role="presentation">
    <a class="nav-link" id="<%= id; %>" data-mdb-toggle="tab" href="<%= href; %>" role="tab" aria-controls="<%= target; %>"><%= title; %></a>
  </li>
  <%
}

let defHash = "#overview";
%>
</ul>
<div class="tab-content">

<div class="tab-pane" id="overview" role="tabpanel" aria-labelledby="overview-tab">
<table class="table table-hover table-bordered">
  <tr>
    <td><%- include("tooltip", {k: "block"}) %>Block</td>
    <td>
      <a href='<%= prevBlockUrl; %>' class="btn btn-link btn-sm">&lt;</a>
      <span class="font-weight-bold"><%= b.number %></span>
      <a href='<%= nextBlockUrl; %>' class="btn btn-link btn-sm">&gt;</a>
    </td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "finalized"}) %>Finalized</td>
    <td><span id="status"><%- include("finalized", {finalized: b.finalized}); %></span>
    <% if ( uiTool.verifierEnabled() ) { %>
    <%- include("verifyBlock", {id, blockNumber, obj: b.header}) %>
    <% } %>
    </td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "blockhash"}) %>Hash</td>
    <td>
      <%- uiTool.getFullHash(b.hash); %>
    </td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "parenthash"}) %>Parent Hash</td>
    <td>
      <%- uiTool.getFullHash(b.header.parentHash); %>
    </td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "stateroot"}) %>State Root</td>
    <td>
      <%- uiTool.getFullHash(b.header.stateRoot); %>
    </td>
  </tr>
  <% if (b.relayBN && b.relayStateRoot && b.header.stateRoot != b.relayStateRoot){
      let relayParentBlock = `/block/${id}/${b.relayBN}`;
  %>
  <tr>
    <td><%- include("tooltip", {k: "relayStateRoot"}) %>Relay Parent StateRoot</td>
    <td>
      <%- uiTool.getFullHash(b.relayStateRoot); %>
    </td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "relayparentnumber"}) %>Relay Parent BN</td>
    <td>
      <%- uiTool.presentRelayBlock(chainID, b.relayBN); %>
    </td>
  </tr>
  <% } %>
  <% if (b.author){  %>
  <tr>
    <td><%- include("tooltip", {k: "blockauthor"}) %>Author</td>
    <td>
      <img src="/identicon/<%= b.author; %>" class="rounded-start"  width="25px"  loading="lazy"/>
      <a href='/account/<%= paraTool.getPubKey(b.author) %>'>
        <code><%= b.author; %></code>
      </a>
       <%- uiTool.showAccountInfo(b, "authorAddress") %>
     </td>
  </tr>
<% } %>
  <tr>
    <td><%- include("tooltip", {k: "blocktimestamp"}) %>Timestamp</td>
    <td class='date'><%= uiTool.presentTS(b.blockTS); %></td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "blocktimestampago"}) %>Block Time</td>
    <td class='date'><%= uiTool.presentSecondsAgoTS(b.blockTS); %></td>
  </tr>
    <% if ( b.numXCMTransfersOut ) { %>
  <tr>
    <td><%- include("tooltip", {k: "xcmtransferstally"}) %>XCM Transfers</td>
    <td>
    <a class="btn-sm btn-primary" href='/xcmtransfers?chainfilters=<%= id; %>&blockNumber=<%= blockNumber %>'><%= b.numXCMTransfersOut; %> XCM transfers</a>
    </td>
  </tr>
    <% } %>
    <%
    if ( b.transactionsConnected ) {

    %>
  <tr>
    <td><%- include("tooltip", {k: "remoteexecutions"}) %># XCM Remote Executions</td>
    <td>
    <a class="btn-sm btn-primary" href='/xcmtransfers?chainfilters=<%= id; %>&blockNumber=<%= blockNumber %>'><%= b.transactionsConnected.length; %> Remote Executions</a>
    </td>
  </tr>
    <% } %>

  <% if ( b.numXCMMessagesIn > 0 || b.numXCMMessagesOut > 0 ) { %>
  <tr>
    <td><%- include("tooltip", {k: "xcmmessages"}) %>XCM Messages</td>
    <td>
    <% if ( b.numXCMMessagesIn > 0 ) { %>
    <a class="btn-sm btn-primary" href='/xcmmessages?chainfilters=<%= id; %>&blockNumber=<%= blockNumber %>'><%= b.numXCMMessagesIn; %> XCM Incoming messages</a>
    <% } %>
    <% if ( b.numXCMMessagesOut > 0 ) { %>
    <a class="btn-sm btn-primary" href='/xcmmessages?chainfilters=<%= id; %>&blockNumber=<%= blockNumber %>'><%= b.numXCMMessagesOut; %> XCM Outgoing messages</a>
    <% } %>
    </td>
  </tr>
  <% } %>
  <tr>
    <td><%- include("tooltip", {k: "specversion"}) %>Spec Version</td>
    <td>
      <%- uiTool.presentSpecVersion(id, b.specVersion); %>
    </td>
  </tr>
  <tr>
    <td><%- include("tooltip", {k: "trace"}) %>Trace</td>
    <td>
      <%- uiTool.presentTrace(id, blockNumber, b.hash); %>
    </td>
  </tr>
  <tr>
    <td>Compare to</td>
    <td>
    <%
    let endpoints = uiTool.getPublicWSEndpoints(chain);
    let polkadotJSURL = `https://polkadot.js.org/apps/?rpc=${encodeURIComponent(endpoints[0])}#/explorer/query/${b.hash}`; %>
      <a href='<%= polkadotJSURL; %>' target='_new'><img src="https://cdn.polkaholic.io/polkadotjs.svg" width="16"></a>
      <% if ( chain.subscanURL && false ) {
         let subscanURL = `${chain.subscanURL}/block/${blockNumber}`;
         %>
      <a href='<%- subscanURL; %>' target='_new'><img src="https://cdn.polkaholic.io/subscan.svg" width="16"></a>
      <% } %>

  </tr>

</table>
</div>

<div class="tab-pane" id="extrinsics" role="tabpanel" aria-labelledby="extrinsics-tab">
  <div class="form-check form-switch" style="float: right; padding: 20px">
    <input class="form-check-input" id="showallextrinsics" type="checkbox" role="switch" id="flexSwitchCheckDefault" checked="true"/>
    <label class="form-check-label" for="flexSwitchCheckDefault">Show all extrinsics</label>
  </div>
  <table id="tableblockextrinsics"  style='width: 100%' class="table table-striped table-hover">
    <thead>
      <tr class="tableheader">
        <th><%- include("tooltip", {k: "extrinsicid"}) %>Extrinsic ID</th>
        <th><%- include("tooltip", {k: "module"}) %>Section/Method</th>
        <th><%- include("tooltip", {k: "params"}) %>Params</th>
        <th><%- include("tooltip", {k: "sender"}) %>From</th>
        <th><%- include("tooltip", {k: "blockhash"}) %>Result</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
</div>

<div class="tab-pane" id="events" role="tabpanel" aria-labelledby="events-tab">
  <div class="form-check form-switch" style="float: right; padding: 20px">
    <input class="form-check-input" id="showallevents" type="checkbox" role="switch" id="flexSwitchCheckDefault" />
    <label class="form-check-label" for="flexSwitchCheckDefault">Show all events</label>
  </div>
  <table id="tableblockevents" style='width: 100%' class="table table-striped table-hover">
    <thead>
      <tr class="tableheader">
        <th><%- include("tooltip", {k: "eventid"}) %>Event ID</th>
        <th><%- include("tooltip", {k: "extrinsicid"}) %>Extrinsic ID (Event Index#)</th>
        <th><%- include("tooltip", {k: "module"}) %>Action</th>
        <th><%- include("tooltip", {k: "params"}) %>Params</th>
      </tr>
    </thead>
  </table>
</div>

</div>

<script src="/block.js"></script>
<script>
let chainID = <%= chainID %> ;
let defHash = "<%= defHash %>";
let id = '<%- id; %>';
let blockNumber = <%= blockNumber %>;
let tabs = <%- JSON.stringify(tabs); %> ;
<% if ( ! b.finalized ) { %>
let blockHash = '<%= blockHash %>';
showblockstatus("<%= b.hash; %>");
<% } else { %>
let blockHash = '';
<% } %>

// extract events from extrinsics, and tally totalSubstrateSignedExtrinsics, totalEvents
let extrinsics = <%- JSON.stringify(b.extrinsics); %>;
let events = [];
let totalSubstrateSignedExtrinsics = 0;
let totalEvents = 0;
for (const extrinsic of extrinsics) {
   let extrinsicEventIndex = 0; // this is the eventIndex within the extrinsic
   let signed = ( ( extrinsic.signer == undefined ) || ( extrinsic.evm ) ) ? false : true;
   if ( signed ) totalSubstrateSignedExtrinsics++;
   //if ( signed ) totalEvents+=extrinsic.events.length;
   for (const e of extrinsic.events) {
        let pieces = e.eventID.split('-') //2-12039596-1-1
        e.rawEventID = `${pieces[1]}-${pieces[3]}`
        e.extrinsicID = extrinsic.extrinsicID
        e.extrinsicHash = extrinsic.extrinsicHash
        e.extrinsicEventIndex = extrinsicEventIndex
	    e.signed = signed;
	    extrinsicEventIndex++
        //if ( signed ) totalEvents++
        if (e.section == 'system' && (e.method == 'ExtrinsicSuccess' || e.method == 'ExtrinsicFailed')){
        }else{
            totalEvents++
        }
	    events.push(e);
   }
}
document.getElementById('extrinsics-tab').innerHTML = `Extrinsics (${totalSubstrateSignedExtrinsics})`;
document.getElementById('events-tab').innerHTML = `Events (${totalEvents})`;
</script>

<%- include('footer', {apiUrl: apiUrl}); %>
