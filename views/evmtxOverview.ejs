<div class="tab-pane" id="overview" role="tabpanel" aria-labelledby="overview-tab">
<%
let f = tx;
let assetTransferFound = (tx.transfers && tx.transfers.length > 0 )? true : false;
let xcmInfoFound = ( f.xcmInfo != undefined )? true : false;
let newDate = new Date();
newDate.setTime(f.timestamp*1000);
let dateString = newDate.toUTCString();
let txResult = (f.result != undefined)? f.result == 1: true //by default tx result is true (until we back fill it)
let errStr = (f.err != undefined)? f.err: false //by default tx result is true (until we back fill it)
%>

<table class="table table-hover table-bordered">
  <tbody>
    <tr>
      <td><%- include("tooltip", {k: "transactionhash"}) %>Transaction Hash</td>
      <td>
        <code><%= f.transactionHash; %></code>
      </td>
    </tr>
    <% if ( tx.substrate  ) { %>
    <tr>
      <td><%- include("tooltip", {k: "txextrinsichash"}) %>Substrate Extrinsic ID</td>
      <td><%- uiTool.presentFullTx(tx.substrate.extrinsicHash); %> <a href='/tx/<%= tx.substrate.extrinsicHash; %>'><%= f.chainName; %> <%= tx.substrate.extrinsicID; %></a></td>
    </tr>
    <% } %>
    <% if ( tx.isConnectedCall && tx.msgHash) { %>
    <tr>
      <td><%- include("tooltip", {k: "remoteexecutionmessage"}) %>Remote Execution Message</td>
      <td><a href='/xcmmessage/<%= `${tx.msgHash}/${tx.blockNumber}`; %>'><%= tx.msgHash; %></a></td>
    </tr>
    <% } %>
    <% if ( tx.isConnectedCall && tx.childMsgHash) { %>
    <tr>
      <td><%- include("tooltip", {k: "remoteexecutionmessagechild"}) %>Child Message</td>
      <td><a href='/xcmmessage/<%= `${tx.childMsgHash}/${tx.blockNumber}`; %>'><%= tx.childMsgHash; %></a></td>
    </tr>
    <% } %>
<% if ( xcmInfoFound ) { %>
    <% if ( assetTransferFound) { %>
    <tr>
        <td><%- include("tooltip", {k: "tokenstransferred"}) %>Tokens Transferred <B><%-`[${tx.transfers.length }]`%></B></td>
        <td><%- include("evmassettransferred", {transfers: f.transfers}); %></td>
    </tr>
    <% } %>
    <tr>
      <td><%- include("tooltip", {k: "xcmtimeline"}) %>XCM Timeline</td>
      <td><%- include("xcminfo", {xcm: f.xcmInfo}); %></td>
    </tr>
<% } %>
    <tr>
      <td><%- include("tooltip", {k: "txresult"}) %>Status</td>
      <td><%- include("txResult", {success: txResult, errorMsg: errStr}); %></td>
    </tr>
    <tr>
      <td><%- include("tooltip", {k: "finalized"}) %>Finalized</td>
      <td><span id="status"><%- include("finalized", {finalized: (f.status=="finalized")}); %></span></td>
    </tr>
    <tr>
      <td><%- include("tooltip", {k: "block"}) %>Block</td>
      <td>
        <%- include("blockNumber", {chainID: f.chainID, blockNumber: f.blockNumber}); %>
      </td>
    </tr>
    <tr>
      <td><%- include("tooltip", {k: "txtimestamp"}) %>Timestamp</td>
      <td class='date'><%= uiTool.presentSecondsAgoTS(f.timestamp) %> (<%= dateString; %>) </td>
    </tr>
    <tr>
      <td><%- include("tooltip", {k: "evmfrom"}) %>From</td>
      <td>
    <%- uiTool.presentBlockiesOrIdenticon(f.from, 20) %>
	<%- uiTool.presentAddress(f.from) %>
      </td>
    </tr>
<% if ( tx.to) { %>
    <tr>
      <td><%- include("tooltip", {k: "evmto"}) %>Interacted With (To)</td>
      <td>
       <%- uiTool.presentBlockiesOrIdenticon(f.to, 20) %>
	<%- uiTool.presentAddress(f.to) %>
      </td>
    </tr>
<% } %>
<% if ( tx.creates) { %>
    <tr>
      <td><%- include("tooltip", {k: "evmcreates"}) %>To</td>
      <td>
       <%- uiTool.presentBlockiesOrIdenticon(tx.creates, 20) %>
       [Contract <%- uiTool.presentAddress(tx.creates) %> Created]
      </td>
    </tr>
<% } %>
<% if ( assetTransferFound && !xcmInfoFound) { %>
    <tr>
      <td><%- include("tooltip", {k: "tokenstransferred"}) %>Tokens Transferred <B><%-`[${tx.transfers.length }]`%></B></td>
      <td><%- include("evmassettransferred", {transfers: f.transfers}); %></td>
    </tr>
<% } %>
    <tr>
      <td><%- include("tooltip", {k: "evmvalue"}) %>Value</td>

      <td><%- tx.value; %> <%- tx.symbol %>
      <% if ( tx.valueUSD) { %>
      (<%- uiTool.currencyFormat(tx.valueUSD, tx.priceUSD, tx.priceUSDCurrent);%> )
       <% } %>
      <% %> </td>
    </tr>

    <tr>
      <td><%- include("tooltip", {k: "evmtxfee"}) %>Transaction Fee</td>
      <td><%- tx.fee; %> <%- tx.symbol; %>
      <% if ( tx.feeUSD) { %>
      (<%- uiTool.currencyFormat(tx.feeUSD, tx.priceUSD, tx.priceUSDCurrent); %> )
      <% } %>
      <% %> </td>
    </tr>

<% if ( tx.gasLimit ) { %>
    <tr>
      <td><%- include("tooltip", {k: "txgaslimit"}) %>Gas Limit</td>
      <td><%- tx.gasLimit; %></td>
    </tr>
<% } %>
    <tr>
      <td><%- include("tooltip", {k: "txgasused"}) %>Gas Used by Transaction</td>
      <td><%- tx.gasUsed; %><% if ( tx.gasLimit ) { %><%- ` (${uiTool.presentPercentage(tx.gasUsed/tx.gasLimit)})` %><% } %></td>
    </tr>
<% if ( tx.baseFeePerGas ) { %>
    <tr>
      <td><%- include("tooltip", {k: "basefeepergas"}) %>Base Fee Per Gas</td>
      <td><%- uiTool.presentGasPrice(tx.baseFeePerGas, tx.symbol); %></td>
    </tr>
<% } %>
<% if ( tx.maxFeePerGas != undefined) { %>
    <tr>
      <td><%- include("tooltip", {k: "maxfeepergas"}) %>Max Fee Per Gas</td>
      <td><%- uiTool.presentGasPrice(tx.maxFeePerGas, tx.symbol); %></td>
    </tr>
<% } %>
<% if ( tx.maxPriorityFeePerGas != undefined) { %>
    <tr>
      <td><%- include("tooltip", {k: "maxpriorityfeepergas"}) %>Max Priority Fee Per Gas</td>
      <td><%- uiTool.presentGasPrice(tx.maxPriorityFeePerGas, tx.symbol); %></td>
    </tr>
<% } %>
<% if ( tx.burnedFee != undefined) { %>
    <tr>
      <td><%- include("tooltip", {k: "burnedfees"}) %>Burned Fees</td>
      <td><%- tx.burnedFee; %> <%- tx.symbol; %> </td>
    </tr>
<% } %>
<% if ( tx.txnSaving != undefined) { %>
    <tr>
      <td><%- include("tooltip", {k: "txnsavings"}) %>Txn Savings</td>
      <td><%- tx.txnSaving; %> <%- tx.symbol; %> </td>
    </tr>
<% } %>
<% if ( tx.gasPrice ) { %>
    <tr>
      <td><%- include("tooltip", {k: "gasprice"}) %>Gas Price</td>
      <td><%- uiTool.presentGasPrice(tx.gasPrice, tx.symbol); %></td>
    </tr>
<% } %>
<% if ( tx.txType != undefined ) { %>
    <tr>
      <td><%- include("tooltip", {k: "txntype"}) %>Txn Type</td>
      <td><%- uiTool.getEvmTxnType(tx.txType); %> </td>
    </tr>
<% } %>
<% if ( tx.priceUSD) { %>
    <tr>
      <td><%- include("tooltip", {k: "evmprice"}) %><%- tx.symbol; %> Price</td>
      <td><%- uiTool.currencyFormat(tx.priceUSD); %> </td>
    </tr>
<% } %>
    <tr>
      <td><%- include("tooltip", {k: "evmnonce"}) %>Nonce</td>
      <td><%= f.nonce; %></td>
    </tr>

<% if ( tx.transactionIndex != undefined) { %>
    <tr>
        <td><%- include("tooltip", {k: "evmposition"}) %>Position</td>
        <td><%= tx.transactionIndex; %></td>
    </tr>
<% } %>
<%
function hex2a(hexx) {
    var hex = hexx.toString();//force conversion
    var str = '';
    for (var i = 0; i < hex.length; i += 2)
        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
    return str;
}

let txInput = tx.input
let txInputStr = `${txInput}`
let utf8Str = hex2a(txInputStr.substring(2));
if ( tx.decodedInput ) {
    let decodeStatus = tx.decodedInput.decodeStatus
    let funcDesc = (tx.decodedInput.signature)? `Function: ${tx.decodedInput.signature}\n\n` : ''
    let methodIDDesc = (tx.decodedInput.signature)?  `MethodID: ${tx.decodedInput.methodID}\n` : ''
    if (tx.decodedInput.methodID != undefined) {
        if (tx.decodedInput.methodID == '0x') {
            methodIDDesc = ''
            funcDesc = ''
        }
    }
    %>
    <tr>
      <td><%- include("tooltip", {k: "evminputdata"}) %>Input Data</td>
      <td>

<% if ( decodeStatus == "success") { %>
    <div id="txinputdata_default" style="display">
    <%- include("evmtxdecodedinput", {tx: tx.decodedInput, showParams: true}) %>
    </div>
    </div>
    <div id="txinputdata_utf8" style="display:none" >
        <textarea style="width: 800px; height:125px"><%= utf8Str; %></textarea>
    </div>
    <div id="txinputdata_original" style="display:none" >
        <textarea style="width: 800px; height:125px"><%= txInputStr; %></textarea>
    </div>
<% } else { %>
    <div id="txinputdata_default" style="display:none">
    <%- include("evmtxdecodedinput", {tx: tx.decodedInput, showParams: true}) %>
    </div>
    </div>
    <div id="txinputdata_utf8" style="display:none" >
        <textarea style="width: 800px; height:125px"><%= utf8Str; %></textarea>
    </div>
    <div id="txinputdata_original" style="display" >
        <textarea style="width: 800px; height:125px"><%= txInputStr; %></textarea>
    </div>
<% } %>
<div class="dropdown">
  <button class="btn btn-tertiary dropdown-toggle" type="button" id="decodeInput" data-mdb-toggle="dropdown" aria-expanded="false">View Input As</button>
  <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="dropdownMenuButton2">
      <% if ( decodeStatus == "success") { %>
          <li><a class="dropdown-item active" href="javascript:showtxinputdata('txinputdata_default')">Default View</a></li>
          <li><a class="dropdown-item" href="javascript:showtxinputdata('txinputdata_utf8')">UTF-8</a></li>
          <li><a class="dropdown-item" href="javascript:showtxinputdata('txinputdata_original')">Original</a></li>
      <% } else { %>
          <li><a class="dropdown-item" href="javascript:showtxinputdata('txinputdata_default')">Default View</a></li>
          <li><a class="dropdown-item" href="javascript:showtxinputdata('txinputdata_utf8')">UTF-8</a></li>
          <li><a class="dropdown-item active" href="javascript:showtxinputdata('txinputdata_original')">Original</a></li>
      <% } %>

  </ul>
</div>
      </td>
    </tr>
<% } %>
    <tr>
      <td>Compare to</td>
      <td>
        <% if ( f.chainID && (f.chainID == 2004 || f.chainID == 22023 || f.chainID == 61000)) {
            let externalURL;
            let imgURL;
            if (f.chainID == 2004){
                externalURL = `https://moonscan.io`
                imgURL =  "https://cdn.polkaholic.io/moonscan.svg"
            }else if (f.chainID == 22023){
                externalURL = `https://moonriver.moonscan.io`
                imgURL =  "https://cdn.polkaholic.io/moonriverscan.svg"
            }else if (f.chainID == 61000){
                externalURL = `https://moonbase.moonscan.io`
                imgURL =  "https://polkadot.js.org/apps/static/moonbase_alpha.1299ae1a..png"
            }
           let txURL = `${externalURL}/tx/${f.transactionHash}`;
           %>
        <a href="<%= txURL; %>" target="_new"><img src="<%= imgURL; %>" width="16"></a>
        <% }%>
        <% if ( f.chainID && (f.chainID == 2006 || f.chainID == 22007)) {
           let externalURL = (f.chainID == 2006)? `https://blockscout.com/astar` : `https://blockscout.com/shiden`
           let imgURL = "https://cdn.polkaholic.io/blockscout.png"
           let txURL = `${externalURL}/tx/${f.transactionHash}`;
           %>
        <a href="<%= txURL; %>" target="_new"><img src="<%= imgURL; %>" width="16"></a>
        <% }%>
      </td>
    </tr>
</table>
</div>
