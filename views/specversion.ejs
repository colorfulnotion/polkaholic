<%- include('header', {chainInfo: chainInfo, title: `${chain.chainName} Spec Version`}); %>
<%- include('chainheader', { chain: chain, title: `Spec Version ${specVersion}` }); %>
<script>
function toggleHideExtrinsicsEvents() {
  let x = document.getElementById("toggleHideEE");
  const stylesheet = document.styleSheets[0];
  for (let i = 0; i < stylesheet.cssRules.length; i++) {
    if(stylesheet.cssRules[i].selectorText === '.rowhidden') {
      if ( x.checked ) {
        stylesheet.cssRules[i].style.setProperty("display", "none");
      } else {
        stylesheet.cssRules[i].style.setProperty("display", "block");
      }
    }
  }
}
</script>
<input type="checkbox" id="toggleHideEE" onclick='toggleHideExtrinsicsEvents()' CHECKED>Hide non-zero extrinsics/events
<%
 var lookup = runtime.lookup.types;
 var pallets = runtime.pallets;
 function get_type(id) {
    try {
    for (let i = 0; i < lookup.length ; i++) {
       if ( lookup[i].id == id ) {
          return ( lookup[i].type.def.variant.variants );
       }
    }
    }catch(e) {
    }
    return(false);
 }
 function stringmatch(a, b) {
   let a0 = a.replaceAll("_", "").toLowerCase();
   let b0 = b.replaceAll("_", "").toLowerCase();
   return ( a0.localeCompare(b0) == 0 );
 }

 function capitalizeFirstLetter(string) {
     return string.charAt(0).toUpperCase() + string.slice(1);
 }

 function lowerCaseFirstLetter(string) {
     return string.charAt(0).toLowerCase() + string.slice(1);
 }

 //transfer_keep_alive
 function presentCallFunc(callfuncS) {
   let pieces = callfuncS.split('_')
   let s = ''
   for (let i = 0; i < pieces.length; i++){
     if (i == 0){
       s+=pieces[i]
     }else{
       s+=capitalizeFirstLetter(pieces[i])
     }
   }
   return s
 }

 function lookup_extrinsic(palletName, moduleName) {
   for ( let i = 0; i < extrinsics.length; i++) {
     if ( stringmatch(extrinsics[i].section, palletName) && stringmatch(extrinsics[i].method, moduleName) ) {
       return(extrinsics[i]);
     }
   }
   return(false);
 }
 
 function lookup_event(palletName, moduleName) {
   for ( let i = 0; i < events.length; i++) {
     if ( stringmatch(events[i].method, moduleName) ) {
       return(events[i]);
     }
   }
   return(false);
 }
%>


<table class="table table-striped table-hover">
  <thead>
    <tr>
      <th scope="col">Section [Pallet]</th>
      <th scope="col">Extrinsics</th>
      <th scope="col">Events</th>
      <th scope="col">Storage</th>
    </tr>
  </thead>
<% for ( let i = 0; i < pallets.length; i++ ) {
   let p = pallets[i];
   let palletName = lowerCaseFirstLetter(p.name);
%>
    <tr>
      <td><a href='/extrinsics/<%= chain.id %>/<%= palletName; %>' class="btn btn-outline-primary text-capitalize"><%= p.name; %></a> </td>

<td>
<% if (p.calls && ( p.calls.type != undefined) ) { %>
<%   let t = get_type(p.calls.type);
     let totalExt30d = 0;
     if ( t ) {
       for ( let k = 0; k < t.length ; k++) {
            let callName = presentCallFunc(t[k].name);
	    let e = lookup_extrinsic(palletName, callName);
            let num30d = e ? e.numExtrinsics30d : 0;
	    totalExt30d += num30d;
       }
       let tclstr = ( totalExt30d > 0 ) ? "rowvisible" : "rowhidden";
%>
  <table class="table table-striped table-hover"><tr class='<%= tclstr; %>'><th width=120>Method</th><th align=right width=80>7d</th><th align=right width=80>30d</th></tr>
       <% for ( let k = 0; k < t.length ; k++) {
            let callName = presentCallFunc(t[k].name);
            let docs = t[k].docs.join(" ")
	          let e = lookup_extrinsic(palletName, callName);
	          let num7d = e ? e.numExtrinsics7d : 0;
	          let num30d = e ? e.numExtrinsics30d : 0;
	          let cls = ( num30d > 0 ) ? "btn-primary text-capitalize" : "btn-outline-primary text-capitalize";
	          let clstr = ( num30d > 0 ) ?  "rowvisible" : "rowhidden";
          %>
          <tr class='<%= clstr; %>'><td><a href='/extrinsics/<%= chain.id %>/<%= palletName; %>/<%= lowerCaseFirstLetter(callName) %>' class="btn <%= cls; %>" data-mdb-toggle="tooltip" title="<%= docs; %>"><%= callName; %></a></td>
	      <td align=right><%= num7d; %></td>
	      <td align=right><%= num30d; %></td></tr>

      <% } %>
   </table>
  <% } %>
<% } %>
</td>
      <td><% if ( p.events ) { %>
<%     let t = get_type(p.events.type);
       let totalEvent30d = 0;
       if ( t ) {
         for ( let k = 0; k < t.length ; k++) {
	    let eventName = t[k].name;
	    let e = lookup_event(palletName, eventName);
	    let num30d = e ? e.numEvents30d : 0;
            totalEvent30d += num30d;
         }
       let tclstr = ( totalEvent30d > 0 ) ? "rowvisible" : "rowhidden";
       %>
  <table class="table table-striped table-hover"><tr class='<%= tclstr; %>'><th>Event</th><td align=right width=80><b>7d</b></td><td align=right width=80><b>30d</b></td></tr>
<%
         for ( let k = 0; k < t.length ; k++) {
	    let docs = t[k].docs.join(" ")
	    let eventName = t[k].name;
	    let e = lookup_event(palletName, eventName);
	    let num7d = e ? e.numEvents7d : 0;
	    let num30d = e ? e.numEvents30d : 0;
	    let cls = ( num30d > 0 ) ? "btn-primary text-capitalize" : "btn-outline-primary text-capitalize";
	    let clstr = ( num30d > 0 ) ?  "rowvisible" : "rowhidden";
	%>
        <tr class='<%= clstr; %>'><td><a href='/events/<%= chain.id %>/<%= palletName; %>/<%- lowerCaseFirstLetter(eventName) %>' class="btn <%= cls; %>" data-mdb-toggle="tooltip" title="<%= docs; %>"><%= eventName; %></a></td>
            <td align=right><%= num7d; %></td>
            <td align=right><%= num30d; %></td></tr>
<%

       }
     } %>
  </table>
<% } %>
      </td>


      <td><% if ( p.storage && p.storage.items ) { %>
    <% for (j=0; j<p.storage.items.length; j++) {
          let item = p.storage.items[j];
          let storageName = item.name
	        let title = item.docs.join(" "); %>
          <button type="button" class="btn btn-outline-secondary text-capitalize" data-mdb-toggle="tooltip" title="<%= title; %>">
            <%= item.name; %>
          </button>
    <% } %>
      <% } %>
      </td>


</tr>
<% } %>
</table>

<script>
var specVersion = '<%= specVersion; %>';
$(function () {
  $('[data-mdb-toggle="tooltip"]').tooltip()
});
$(document).ready(function() {
    setupapidocs("chain", "specversion", `<%= id; %>/<%= specVersion %>`);
});

</script>

<%- include('footer', {apiUrl: apiUrl}); %>
