<%
let t = null;
let tooltips = {
 "block": "The block number indicates the length of the chain, and increases as new blocks are added to the chain",
 "blockgaslimit": "Total gas limit provided by all the transactions in the block",
 "blockgasused": "Total gas used in the block, and its percentage of gas filled in the block",
 "evmfrom": "The sending party of the transaction (could be a contract address)",
 "evmto": "The receiving party of the transaction (could be a contract address)",
 "evmvalue": "The value being transacted, and USD value (if available)",
 "evmtxfee": "Amount paid to the collator for processing the EVM Transaction",
 "txntype": "As of EIP2718, defines an envelope for legacy, current and future transaction types",
 "evminputdata": "Input parameters for the transaction.  If a contract ABI is available, then generally input parameters can be decoded.",
 "evmnonce": "Sequential number for an EVM Address, beginning with 0 for the first transaction, 1 for the second, 2 for the third, and so on",
 "extrinsictimestamp": "Time of the extrinsic inclusion in a block",
 "extrinsichash": "ID/Hash of the extrinsic data.  This is not unique due to reaping, but extrinsic IDs (an extrinsic included at a specific position in a block) are unique, once the block is finalized",
 "chain": "Substrate chain name",
 "account": "If an extrinsic is signed, the account signing the extrinsic, which is usually the sender (but note: may be a multisig or proxy account)",
 "nonce": "Sequence number for a substrate address, beginning with 0 for the first extrinsic, 1 for the second, 2 for the third, and so on",
 "module": "Pallet and method for the submitted extrinsic, by convention separated by a colon ':'.",
 "params": "Parameters of the extrinsic, including and decoded and decorations",
 "substrateSignature": "Signature of an extrinsic, signed by the sender",
 "events": "Events generated by the execution of the extrinsic once included in the block",
 "transfers": "Tally of Transfers generated by the execution of the extrinsic once included in the block",
 "valuetransfers": "Estimated Tally of Transfers (in USD) generated by the execution of the extrinsic once included in the block",
 "traceid": "Each substrate block has a trace showing how key-value pairs in storage maps are mutated in the execution of the block",
 "sectionstorage": "Each pallet has a storage map holding key-value pairs.",
 "storagekey": "Shows raw and decoded storage key for a specific storage map that was adjusted in the block.",
 "storagevalue": "Shows raw and decoded storage value for a specific storage map that was adjusted in the block.",
 "txextrinsichash": "Every EVM Transaction has a extrinsic hash (which may not be unique, due to reaping) and an Extrinsic ID",
 "events": "Events generated by the execution of the extrinsic once included in the block",
 "method": "When a transaction calls an EVM Contract, shows the specific method; or, shows a native transfer or contract creates call instead",
 "transactionhash": "An EVM transaction hash is a unique 66 character identifier that is generated when a transaction is submitted to the block chain, and generally incorporates the address latest nonce",
 "txgaslimit": "Total gas limit provided by all the transactions in the block",
 "txgasused": "Total gas used in the block, and its percentage of gas filled in the block",
 "tokenstransferred": "List of native + ERC tokens transfered in the transaction, and their fiat values, if available",
 "typetraceaddress": "Shows the call stack summary between the parent tx hash and the child tx hash",
 "txtimestamp": "Time of the transaction/extrinsic",
 "txresult": "Result of execting the transaction/extrinsic",
 "assettransferred": "List of assets transfered in the extrinsic, and their fiat values, if available",
 "blocktimestamp": "Time of the block generation",
 "blocktimestampago": "Age of the block",

 "gasprice": "Cost per unit of gas for the transaction; The higher the gas price, the higher the probability that the transaction will be included in the block",
 "basefeepergas": "Base fee per gas specified in the block",
 "maxfeepergas": "Represents the maximum amount that a user is willing to pay per gas to include their transaction, and is inclusive of both Base Fee per Gas and Max Priority Fee per Gas",
 "maxpriorityfeepergas": "Represents the part of the transaction fee that goes to the collator, and is specified by the user",
 "burnedfees": "Represents the burned fees in this transaction",
 "txnsavings": "If applicable, represents transaction fees saved using the formula: (Max Fee Per Gas - ( Base Fee Per Gas + Max Priority Per Gas ) ) * Gas Used",
 "price": "Price of the asset",
 "evmprice": "Price of the native token at the time of the transaction",
 "evmposition": "Index position of the transaction in the EVM Block",
 "xc20contractaddress": "The XC20 Contract address is a special precompiled contract address for an asset that may be interacted with in EVM chains in the same way as an ERC20 Contract",
 "xcminteriorkey": "The XCM Interior Key is a JSON string (with a tilde and relay chain appended) that uniquely identifies an asset in a network",
 "v1multilocation": "V1 MultiLocation  is a JSON string that uniquely identifies a Multilocation in a network, which may be used as an argument for substrate extrinsics",
 "evmmultilocation": "EVM Multilocation is a JSON string that uniquely identifies a Multilocation in a network, which may be used an argument for EVM XCM transfers + remote executions",
 "extrinsicid": "An extrinsicID, by convention is the blocknumber of the block which includes the extrinsic followed by the index of the extrinsic in the block.",
 "eventid": "Event ID, generally included in a block's extrinsic",
 "sender": "Sender of extrinsic/tx",
 "amountsent": "Amount sent",
 "amountreceived": "Amount received",
 "value": "Value of activity",
 "valueusd": "Value of activity, estimated in USD",
 "transferfrom": "Who the transfer is from",
 "transferto": "Who the transfer is to",
 "transfertype": "Type of transfer (IN vs OUT)",
 "beneficiary": "Beneficiary of transfer",
 "origination": "Origination chain",
 "destination": "Destination chain",
 "relaychain": "The relay chain provides security to parachains and coordinates XCM messaging and crowdloan activity",
 "rewards": "Rewards",
 "rewardsaction": "Rewards Action",
 "rewardstimestamp": "Time of reward",
 "era": "Era",
 "parachain": "Parachains derive their security from their relay chain, and have a lease provided by crowdloan contributions",
 "crowdloanscontributed": "Amount contributed",
 "parenttxhash": "For internal transaction, the initating transaction hash",
 "assets": "Assets involved in transaction",
 "currencyid": "Currency ID of the asset, assigned by the parachain to uniquely represent an asset within the parachain and unambiguously specify XCM assets in XCM transfer and fee payment for XCM transactions",
 "holdings": "Holdings across all wallets",
 "numholders": "Number of holders of the asset",
 "free": "Free",
 "tvlfree": "Free Total locked value",
 "reserved": "Reserved",
 "tvlreserved": "Reserved Total locked value",

 "wasmcontractaddress": "WASM Contract address",
 "wasmcontractstatus": "WASM Contract Status can be verified, unverified, submitted or unknown.",
 "wasmcontractdeployer": "Deployer is who submitting the contract to the chain",
 "wasmcodehash": "Code hash is the hash of the byte code submitted",
 "wasmcontractinstantiated": "Specifies the block the contract was instantiated",
 "wasmcontracttimestamp": "Specifies the timestamp the contract was instantiated",
 "wasmcodehash": "WASM Code hash",
 "wasmcodestatus": "WASM Code status",
 "wasmcodestorer": "WASM Code storer",
 "wasmcodestored": "WASM Code Stored",
 "wasmcodelanguage": "WASM Language",
 "wasmcodecompiler": "WASM Compiler",
 "wasmcodetimestamp": "WASM submitted",

 "channelsender": "Channels are open in one direction, from a sender to a recipient.  Specifies the sending chain",
 "channelrecipient": "Channels are open in one direction, from a sender to a recipient.  Specifies the receiving chain",
 "channelstatus": "Channels have a status",
 "channelrequest": "Time of request channel",
 "channelsymbols": "Assets used in xcm transfers through channel",
 "channelmessagessent": "# of Messages sent through channel",
 "channelvalueused": "Value of Messages through channel",

 "evmblockhash": "The hash of the block header of the current block",
 "evmparenthash": "The hash of the block from which this block was generated, also known as the parent block",
 "evmstateroot": "EVM Block State root hash",
 "blockhash": "Substrate block hash of the current block",
 "blockauthor": "The author/validator of the the block",
 "trace": "Substrate Block Trace, which lists out storage key value pairs that have been updated in this block during execution",
 "parenthash": "Substrate block hash of the previous block, for which this current block is built off of",
 "stateroot": "Substrate state root, which rolls up the entire state of the chain as of this block",
 "finalized": "When a block is finalized, it cannot be reverted.  Unfinalized blocks, by contrast, can be reverted, where at a given block number can have multiple candidate unfinalized blocks with different blockhashes.",
 "weight": "Weight executed by extrinsic, which decides the fees charged by the substrate chain",
 "lifetime": "An extrinsic lifetime can be mortal (can be included in a specific era/set of blocks) or immortal (can be included in any block)",
 "result": "An extrinsic may successfully execute or have an invalid result",
 "specversion": "A chain's spec version defines possible extrinsic/events/storage items.  Every block and extrinsic can be interpreted with the chain's spec version",
 "sentatblock": "The block number on the origination chain which initiated an XCM Message.  This block typically includes an extrinsic that sends an XCM",
 "txfees": "Fees charged by the origination chain.",
 "transactions": "Tally of the number of transactions included in the block",
 "extrinsics": "Tally of the number of extrinsics (signed or unsigned) included in the block",
 "signedextrinsics": "Tally of the number of extrinsics (signed or unsigned) included in the block",
 "remoteexecutions": "Tally of the number of remotely executed transactions included in this block",
 "xcmtransferstally": "Tally of the number of xcm transfers included in this blocks",
 "remoteexecutionmessage": "Link to XCM Message sent by Origination chain, initiating Remote Execution",
 "remoteexecutionmessagechild": "Link to child XCM Message caused by this remote execution call",
 "xcmtransfers": "Tally of the XCM transfers included in the block",
 "xcmmessages": "Tally of the number of XCM Messages included in the block",
 "xcmdestaddress": "Recipient of XCM Message",
 "xcmmessagehex": "SCALE Encoding of the XCM Message",
 "xcmmessagetype": "XCM Message Type (hrmp-Horizontal, ump-Upward, dmp-Downward)",
 "xcminstructionssummary": "Key instructions used in XCM Message",
 "xcminstructions": "Complete decode of XCM instructions of XCM Message",
 "xcmtransact": "Complete decode of transact instruction (if present)",
 "xcmassets": "Key information about assets mentioned in instructions: symbol, decimals and Interior Key",
 "xcmversion": "XCM Version used in the message (v0, v1, v2, v3)",
 "collator": "The address of who collated the transactions into a block",
 "author": "The address of who authored the block",
 "xcmtimeline": "Visual depiction of how an XCM Extrinsic/Message results in activity on an origination chain, relay chain and destination chain",
 "xcmmessagehash": "Every XCM Message is a set of SCALE-encoded bytes representing a set of XCM instructions.  This is the Blake256 hash of those bytes.",
 "executedeventid": "The event ID of destination chain representing the success/failure of the treatment of the XCM Message",
 "relayedatblock": "The block number of the relay chain which relayed the XCM Message to the destination chain.",
 "executionstatus": "Whether the XCM Message has been successfully processed, or an error",
 "receivedatblock": "The block number of the destination chain which received the XCM Message",
 "teleportfees": "Fees charged by the destination chain for processing the XCM Message",
 "evmtransaction": "Every EVM Transaction has a associated substrate extrinsic, which have two different hashes: there is a substrate extrinsic hash (which may not be unique, because of the possibility of reaped accounts) and a unique transaction hash.",
 "selectwalletaccounts":  "Connect your substrate and evm accounts by toggling and untoggling them from the dropdown menu",
 "relayparentnumber": "The validation data provides information about how to create the inputs for validation of a para block candidate. The Relay Parent Number informs collator the context(i.e. relayChain's BlockNumber) where this parachain block is being built on.",
 "relayStateRoot": "The validation data provides information about how to create the inputs for validation of a para block candidate. The Relay Parent Number informs collator the context(i.e. relayChain's stateRoot) where this parachain block is being built on.",
 "todo": "" // add missing desc
};
if ( k && tooltips[k] != undefined ) {
  t=tooltips[k];
}
%><% if ( t ) { %><i class="fas fa-question-circle fa-sm me-2 opacity-70" title="<%= t; %>" data-mdb-toggle="tooltip" data-mdb-placement="top"></i><% } %>
