<%
let t = null;
let tooltips = {
 "block": "The block number indicates the length of the chain, and increases as new blocks are added to the chain",
 "blockgaslimit": "Total gas limit provided by all the transactions in the block",
 "blockgasused": "Total gas used in the block, and its percentage of gas filled in the block",
 "evmfrom": "The sending party of the transaction (could be a contract address)",
 "evmto": "The receiving party of the transaction (could be a contract address)",
 "evmvalue": "The value being transacted, and USD value (if available)",
 "evmtxfee": "Amount paid to the collator for processing the EVM Transaction",
 "txntype": "As of EIP2718, defines an envelope for legacy, current and future transaction types",
 "evminputdata": "Input parameters for the transaction.  If a contract ABI is available, then generally input parameters can be decoded.",
 "evmnonce": "Sequential number for an EVM Address, beginning with 0 for the first transaction, 1 for the second, 2 for the third, and so on",
 "extrinsictimestamp": "Time of the extrinsic inclusion in a block",
 "blocktimestamp": "Time of the block generation",
 "extrinsichash": "Hash of the extrinsic data.  This is not unique due to reaping, but extrinsic IDs (an extrinsic included at a specific position in a block) are unique, once the block is finalized",
 "chain": "Substrate chain name",
 "account": "If an extrinsic is signed, the account signing the extrinsic, which is usually the sender (but note: may be a multisig or proxy account)",
 "nonce": "Sequence number for a substrate address, beginning with 0 for the first extrinsic, 1 for the second, 2 for the third, and so on",
 "module": "Pallet and method for the submitted extrinsic, by convention separated by a colon ':'.",
 "params": "Parameters of the extrinsic, including and decoded and decorations",
 "substrateSignature": "Signature of an extrinsic, signed by the sender",
 "events": "Events generated by the execution of the extrinsic once included in the block",

 "txextrinsichash": "Every EVM Transaction has a extrinsic hash (which may not be unique, due to reaping) and an Extrinsic ID",
 "transactionhash": "An EVM transaction hash is a unique 66 character identifier that is generated when a transaction is submitted to the block chain, and generally incorporates the address latest nonce",
 "txgaslimit": "Total gas limit provided by all the transactions in the block",
 "txgasused": "Total gas used in the block, and its percentage of gas filled in the block",
 "tokenstransferred": "List of native + ERC tokens transfered in the transaction, and their fiat values, if available",
 "assettransferred": "List of assets transfered in the extrinsic, and their fiat values, if available",
 "txtimestamp": "Time of the transaction",
 "blocktimestamp": "Time of the block",
 "txresult": "result",
 "gasprice": "Cost per unit of gas for the transaction; The higher the gas price, the higher the probability that the transaction will be included in the block",
 "basefeepergas": "Base fee per gas specified in the block",
 "maxfeepergas": "Represents the maximum amount that a user is willing to pay per gas to include their transaction, and is inclusive of both Base Fee per Gas and Max Priority Fee per Gas",
 "maxpriorityfeepergas": "Represents the part of the transaction fee that goes to the collator, and is specified by the user",
 "burnedfees": "Represents the burned fees in this transaction",
 "txnsavings": "If applicable, represents transaction fees saved using the formula: (Max Fee Per Gas - ( Base Fee Per Gas + Max Priority Per Gas ) ) * Gas Used",
 "evmprice": "Price of the native token at the time of the transaction",
 "evmposition": "Index position of the transaction in the EVM Block",

 "evmblockhash": "The hash of the block header of the current block",
 "evmparenthash": "The hash of the block from which this block was generated, also known as the parent block",
 "evmstateroot": "EVM Block State root hash",
 "blockhash": "Substrate block hash of the current block",
 "trace": "Substrate Block Trace, which lists out storage key value pairs that have been updated in this block during execution",
 "parenthash": "Substrate block hash of the previous block, for which this current block is built off of",
 "stateroot": "Substrate state root, which rolls up the entire state of the chain as of this block",
 "finalized": "When a block is finalized, it cannot be reverted.  Unfinalized blocks, by contrast, can be reverted, where at a given block number can have multiple candidate unfinalized blocks with different blockhashes.",
 "weight": "Weight executed by extrinsic, which decides the fees charged by the substrate chain",
 "lifetime": "An extrinsic lifetime can be mortal (can be included in a specific era/set of blocks) or immortal (can be included in any block)",
 "result": "An extrinsic may successfully execute or have an invalid result",
 "specversion": "A chain's spec version defines possible extrinsic/events/storage items.  Every block and extrinsic can be interpreted with the chain's spec version",
 "sentatblock": "The block number on the origination chain which initiated an XCM Message.  This block typically includes an extrinsic that sends an XCM",
 "txfees": "Fees charged by the origination chain.",
 "transactions": "Tally of the number of transactions included in the block",
 "remoteexecutions": "Tally of the number of remotely executed transactions included in this blocks",
 "remoteexecutionmessage": "Link to XCM Message sent by Origination chain, initiating Remote Execution",
 "xcmmessages": "Tally of the number of XCM Messages included in the block",
 "xcmmessagehex": "SCALE Encoding of the XCM Message",
 "xcmmessagetype": "XCM Message Type (hrmp-Horizontal, ump-Upward, dmp-Downward)",
 "xcminstructionssummary": "Key instructions used in XCM Message",
 "xcminstructions": "Complete decode of XCM instructions of XCM Message",
 "xcmtransact": "Complete decode of transact instruction (if present)",
 "xcmassets": "Key information about assets mentioned in instructions: symbol, decimals and Interior Key",
 "xcmversion": "XCM Version used in the message (v0, v1, v2, v3)",
 "collator": "The address of who collated the transactions into a block",
 "xcmtimeline": "Visual depiction of how an XCM Extrinsic/Message results in activity on an origination chain, relay chain and destination chain",
 "xcmmessagehash": "Every XCM Message is a set of SCALE-encoded bytes representing a set of XCM instructions.  This is the Blake256 hash of those bytes.",
 "executedeventid": "The event ID of destination chain representing the success/failure of the treatment of the XCM Message",
 "relayedatblock": "The block number of the relay chain which relayed the XCM Message to the destination chain.",
 "executionstatus": "Whether the XCM Message has been successfully processed, or an error",
 "receivedatblock": "The block number of the destination chain which received the XCM Message",
 "teleportfees": "Fees charged by the destination chain for processing the XCM Message",
 "evmtransaction": "Every EVM Transaction has a associated substrate extrinsic, which have two different hashes: there is a substrate extrinsic hash (which may not be unique, because of the possibility of reaped accounts) and a unique transaction hash."
};
if ( k && tooltips[k] != undefined ) {
  t=tooltips[k];
}
%>
<% if ( t ) { %>
<i class="fas fa-question-circle fa-sm me-2 opacity-70" title="<%= t; %>" data-mdb-toggle="tooltip" data-mdb-placement="top"></i>
<% } %>
