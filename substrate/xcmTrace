#!/usr/bin/env node
 // Usage: xcmTrace trace.json
const fs = require('fs');

const XCMTracer = require("./xcmtracer");
const events = require('events');
const readline = require('readline');

async function main() {
    let tracefn = "/root/xcmscan.log";
    let lookbackSeconds = 300;
    process.argv.forEach(function(val, index, array) {
        if (index == 2 && val.length > 0) {
            tracefn = val;
        }
        if (index == 3 && val.length > 0) {
            lookbackSeconds = parseInt(val, 10);
        }
    });

    let tracer = new XCMTracer();
    await tracer.assetManagerInit();
    let chain = await tracer.getChain(0);
    await tracer.setupAPI(chain);

    try {
        const rl = readline.createInterface({
            input: fs.createReadStream(tracefn),
            crlfDelay: Infinity
        });

        rl.on('line', (line) => {
            tracer.receiveMsg(JSON.parse(line), lookbackSeconds);
        });
        try {
            await events.once(rl, 'close');
            tracer.dump()
            await tracer.match()
        } catch (e) {
            console.log(e);
        }

    } catch (err) {
        console.error(err);
    }
}

main()
    .then(() => {
        process.exit(0);
    })
    .catch((e) => {
        console.error('ERROR', e);
        process.exit(1);
    });