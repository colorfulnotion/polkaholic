#!/usr/bin/env node
// Usage: ./garcmd [relayChain] [targetedParaID]

// EX: parse all supported registry on polkadot
// Usage: ./garcmd polkadot all

// EX: test a specific parser
// Usage: ./garcmd polkadot 2004

var XCMGARLoadManager = require("./xcmgarloadmanager");

async function main() {
    var targetedRelaychain = 'polkadot'
    var targetedParaID = 'all'
    process.argv.forEach(function(val, index, array) {
        if (index == 2 && val.length > 0) {
            targetedRelaychain = val;
        }
    });

    var xcmgarlm = new XCMGARLoadManager();

    let xcRegistryRaw = xcmgarlm.readJSONFn(targetedRelaychain, 'xcmRegistry')
    let xcRegistryNew = xcmgarlm.transformXcGarRegistry(xcRegistryRaw)
    //console.log(`xcRegistryNew`, xcRegistryNew)

    let xcRegistryOld = await xcmgarlm.init_xcm_asset_old(targetedRelaychain)
    //console.log(`xcRegistryOld`, xcRegistryOld)

    let [xcRegistryNewOnly, xcRegistryOldOnly, identicalXcRegsitry, diffXcRefistry] = xcmgarlm.compareXcRegistry(xcRegistryNew, xcRegistryOld)

    await xcmgarlm.flushXcmAssetGar(xcRegistryNew)
    //await garManager.flushAssetGar(xcRegistryNew)
}

main()
    .then(() => {
        console.log("finishing...")
        process.exit(0);
    })
    .catch((e) => {
        console.error('ERROR', e);
        process.exit(1);
    });
