#!/usr/bin/env node
 // Usage:  crawlBlocks [chainID]

var Crawler = require("./crawler");
var paraTool = require("./paraTool");
let isDevelopment = (process.env.NODE_ENV == "development") ? true : false
var debugLevel = paraTool.debugErrorOnly
if (isDevelopment){
    debugLevel = paraTool.debugTracing
    console.log(`[isDevelopment:${isDevelopment}] debugLevel: ${debugLevel}`)
}

async function main() {
    var chainID = -1;
    var crawler = new Crawler();
    //crawler.setDebugLevel(paraTool.debugNoLog)
    //crawler.setDebugLevel(paraTool.debugErrorOnly)
    //crawler.setDebugLevel(paraTool.debugInfo)
    //crawler.setDebugLevel(paraTool.debugVerbose)
    //crawler.setDebugLevel(paraTool.debugTracing)
    crawler.setDebugLevel(debugLevel)
    await crawler.assetManagerInit();
    process.argv.forEach(function(val, index, array) {
        if (index == 2 && val.length > 0) {
            chainID = parseInt(val, 10);
        }
    });
    if ( chainID < 0 ) {
	console.log("chainID not specified");
	process.exit(0);
    }
    let [unsubscribeFinalizedHeads, unsubscribeStorage, unsubscribeRuntimeVersion] = await crawler.crawlBlocks(chainID);
    // never unsubscribe
}

main()
    .then(() => {})
    .catch((e) => {
        console.error('ERROR', e);
        process.exit(1);
    });
