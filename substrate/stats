mysql> select loaded, blocklog.chainID, logDT, startBN, endBN, numBlocks - ( endBN - startBN + 1 ) as b, numBlocks from blocklog where chainID in ( select chainID from chain where crawling = 1 )
and chainID not in ( 22110, 22121, 22100, 22004, 2011, 2046, 2043, 22084, 22015 ) having logDT >= '2022-01-01' and logDT < '2023-02-04' and chainID in ( 0, 2 ) and b <= -1;
+--------+---------+------------+----------+----------+------+-----------+
| loaded | chainID | logDT      | startBN  | endBN    | b    | numBlocks |
+--------+---------+------------+----------+----------+------+-----------+
|      0 |       0 | 2022-07-23 | 11280296 | 11294537 |   -1 |     14241 |
|      0 |       0 | 2022-10-18 | 12526670 | 12541062 |   -1 |     14392 |
|      0 |       0 | 2022-10-20 | 12555396 | 12569584 |   -1 |     14188 |
|      0 |       0 | 2022-10-21 | 12569585 | 12583774 |   -1 |     14189 |
|      0 |       0 | 2022-10-22 | 12583775 | 12597991 |   -1 |     14216 |
|      0 |       0 | 2022-10-24 | 12612192 | 12626374 |   -1 |     14182 |
|      0 |       0 | 2022-10-25 | 12626375 | 12640690 |   -2 |     14314 |
|      0 |       0 | 2022-10-26 | 12640691 | 12655055 |   -1 |     14364 |



-- TODO: process message
-- TODO: indexblock decode problems on: 2034 hydradx, 22004 khala, 22124 amplitude

-- block => indexlog => substrateetl
insert ignore into indexlog (chainID, indexTS, logDT, hr, indexed, readyForIndexing)
(select 2046, floor(unix_timestamp(blockDT)/3600)*3600 as indexTS, date(blockDT) as logDT, hour(blockDT) as hr, 0 as indexed, 1 as readyForIndexing
from block2046 where blockDT >= '2022-01-21 00:00' and blockDT <= '2023-02-04 23:59:59' group by logDT, hr, indexTS) on duplicate key update readyForIndexing = values(readyForIndexing);

update blocklog set loaded = 0 where numBlocks - ( endBN - startBN + 1 ) <= -1;

-- check indexing
select loaded, blocklog.chainID, logDT, startBN, endBN, numBlocks - ( endBN - startBN + 1 ) as b, numBlocks from blocklog where
chainID in ( select chainID from chain where crawling = 1 )  and chainID not in ( 22110, 22121, 22100, 22004, 2011, 2046, 2043, 22084, 22015 )
having logDT >= '2022-01-01' and logDT < '2023-02-04' and b < -5;

2043 OriginTrail reindex
2046 darwinia backfill in process
2011 equilibrium -- reindexing
22015 integritee reindex
22004 khala crawlBackfill requires huge backfill of 1.1MM blocks, doing the last 34K to cover these:
22084 calamari no archive node
22121 imbue no archive node

--- once the above is filled in/fixed, find outliers on extrinsics, transfers, xcmtransfers using blocklogstats

mysql> select blocklog.chainID, logDT, numExtrinsics, s.days, s.numExtrinsics_avg, s.numExtrinsics_std, numBlocks, s.numBlocks_avg, s.numBlocks_std from blocklog, blocklogstats s where last_day(blocklog.logDT) = s.monthDT and blocklog.chainID = s.chainID  and
( ( blocklog.numExtrinsics < s.numExtrinsics_avg - 3*s.numExtrinsics_std  ) or ( blocklog.numBlocks < s.numBlocks_avg - 3*s.numBlocks_std  ) ) having logDT >= '2022-01-01';



